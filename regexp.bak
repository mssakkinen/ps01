;; The first three lines of this file were inserted by DrRacket. They record metadata
;; about the language level of this file in a form that our tools can easily process.
#reader(lib "htdp-beginner-reader.ss" "lang")((modname regexp) (read-case-sensitive #t) (teachpacks ((lib "image.rkt" "teachpack" "2htdp") (lib "batch-io.rkt" "teachpack" "2htdp") (lib "universe.rkt" "teachpack" "2htdp"))) (htdp-settings #(#t constructor mixed-fraction #f #t none #f ((lib "image.rkt" "teachpack" "2htdp") (lib "batch-io.rkt" "teachpack" "2htdp") (lib "universe.rkt" "teachpack" "2htdp")))))
(require 2htdp/universe)
(require "extras.rkt")


;;a State is one:
;; - "State0" inter: entered (a|b)* to this point
;; - "State1" inter: entered (a|b)*(c|d)*
;; - "State2" inter: entered (a|b)*(c|d)*(e)
;; - "ErrorState" inter: errorout state outside accepted key enteries
 
(define State0 "state0")
(define State1 "state1")
(define State2 "state2")
(define ErrorState "error")

;initial-state : Number -> State
;GIVEN: a number
;RETURNS: a representation of the initial state
;of your machine.  The given number is ignored.
(define (initial-state n)
  )

;next-state : State KeyEvent -> State
;GIVEN: a state of the machine and a key event.
;RETURNS: the state that should follow the given key event.  A key
;event that is to be discarded should leave the state unchanged.
(define (next-state st kev)
  )

;accepting-state? : State -> Boolean
;GIVEN: a state of the machine
;RETURNS: true iff the given state is a final (accepting) state

;error-state? : State -> Boolean
;GIVEN: a state of the machine
;RETURNS: true iff the string seen so far does not match the specified
;regular expression and cannot possibly be extended to do so.